// <auto-generated />
using System;
using CineManagerBlazor.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CineManagerBlazor.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200611013956_OutrasViews")]
    partial class OutrasViews
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EnderecoEmail")
                        .IsRequired()
                        .HasColumnType("varchar(160)");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("NomeLogradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoEndereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoLogradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmCartazAte")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Lancamento")
                        .HasColumnType("datetime");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.FilmeGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("GeneroId");

                    b.ToTable("FilmeGeneros");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.FilmeTipoFilme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoFilmeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("TipoFilmeId");

                    b.ToTable("FilmeTiposFilme");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeDaEmpresa")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeResponsavel")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<long>("Rg")
                        .HasColumnType("bigint");

                    b.Property<string>("Salario")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NumPoltrona")
                        .HasColumnType("int");

                    b.Property<int>("TipoSalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoSalaId");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Sessao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Duracao_Sessao")
                        .HasColumnType("int");

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("SalaId");

                    b.ToTable("Sessao");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DDD")
                        .HasColumnType("int");

                    b.Property<string>("DDI")
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.TipoFilme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeTipoFilme")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("TipoFilmes");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.TipoSala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoSala");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Email", b =>
                {
                    b.HasOne("CineManagerBlazor.Shared.Models.Fornecedor", null)
                        .WithMany("ListaEmail")
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Endereco", b =>
                {
                    b.HasOne("CineManagerBlazor.Shared.Models.Fornecedor", null)
                        .WithMany("ListaEndereco")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("CineManagerBlazor.Shared.Models.Funcionario", null)
                        .WithMany("ListaEndereco")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.FilmeGenero", b =>
                {
                    b.HasOne("CineManagerBlazor.Shared.Models.Filme", null)
                        .WithMany("Generos")
                        .HasForeignKey("FilmeId");

                    b.HasOne("CineManagerBlazor.Shared.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.FilmeTipoFilme", b =>
                {
                    b.HasOne("CineManagerBlazor.Shared.Models.Filme", null)
                        .WithMany("TiposFilme")
                        .HasForeignKey("FilmeId");

                    b.HasOne("CineManagerBlazor.Shared.Models.TipoFilme", "TipoFilme")
                        .WithMany()
                        .HasForeignKey("TipoFilmeId");
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Sala", b =>
                {
                    b.HasOne("CineManagerBlazor.Shared.Models.TipoSala", "TipoSala")
                        .WithMany()
                        .HasForeignKey("TipoSalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Sessao", b =>
                {
                    b.HasOne("CineManagerBlazor.Shared.Models.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineManagerBlazor.Shared.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CineManagerBlazor.Shared.Models.Telefone", b =>
                {
                    b.HasOne("CineManagerBlazor.Shared.Models.Fornecedor", null)
                        .WithMany("ListaTelefone")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("CineManagerBlazor.Shared.Models.Funcionario", null)
                        .WithMany("ListaTelefone")
                        .HasForeignKey("FuncionarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
